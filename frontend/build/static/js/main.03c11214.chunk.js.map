{"version":3,"sources":["http-common.js","services/restaurant.js","components/add-review.js","components/restaurants.js","components/restaurants-list.js","components/login.js","App.js","index.js"],"names":["axios","create","baseURL","headers","page","http","get","id","query","by","data","post","put","userId","delete","user_id","AddReview","props","initialReviewState","editing","location","state","currentReview","text","useState","review","setReview","submitted","setSubmitted","user","className","to","match","params","htmlFor","type","required","value","onChange","event","target","name","onClick","restaurant_id","review_id","_id","RestaurantDataService","updateReview","then","response","console","log","catch","e","createReview","Restaurant","address","cuisine","reviews","restaurant","setRestaurant","useEffect","building","street","zipcode","length","map","index","date","reviewId","deleteReview","prevState","splice","pathname","RestaurantsList","restaurants","setRestaurants","searchName","setSearchName","searchZip","setSearchZip","searchCuisine","setSearchCuisine","cuisines","setCuisines","retrieveRestaurants","retrieveCuisines","getAll","getCuisines","concat","find","placeholder","substr","href","Login","setUser","handleInputChange","login","history","push","App","a","logout","style","cursor","exact","path","component","render","ReactDOM","document","getElementById"],"mappings":"6NAEeA,E,OAAAA,EAAMC,OAAO,CAE1BC,QAAS,wHACTC,QAAS,CACP,eAAgB,sBC2BL,M,sFA9Bb,WAAkB,IAAXC,EAAU,uDAAH,EACZ,OAAOC,EAAKC,IAAL,2BAA6BF,M,iBAGtC,SAAIG,GACF,OAAOF,EAAKC,IAAL,yBAA2BC,M,kBAGpC,SAAKC,GAA+B,IAAxBC,EAAuB,uDAAlB,OAAQL,EAAU,uDAAH,EAC9B,OAAOC,EAAKC,IAAL,sBAAwBG,EAAxB,YAA8BD,EAA9B,iBAA4CJ,M,0BAGrD,SAAaM,GACX,OAAOL,EAAKM,KAAK,cAAeD,K,0BAGlC,SAAaA,GACX,OAAOL,EAAKO,IAAI,eAAgBF,K,0BAGlC,SAAaH,EAAIM,GACf,OAAOR,EAAKS,OAAL,4BAAiCP,GAAM,CAACG,KAAK,CAACK,QAASF,O,yBAGhE,SAAYN,GACV,OAAOF,EAAKC,IAAL,iB,aCkEIU,EA1FG,SAAAC,GAChB,IAAIC,EAAqB,GAErBC,GAAU,EAEVF,EAAMG,SAASC,OAASJ,EAAMG,SAASC,MAAMC,gBAC/CH,GAAU,EACVD,EAAqBD,EAAMG,SAASC,MAAMC,cAAcC,MAG1D,MAA4BC,mBAASN,GAArC,mBAAOO,EAAP,KAAeC,EAAf,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAqCA,OACE,8BACGX,EAAMY,KACP,qBAAKC,UAAU,cAAf,SACGH,EACC,gCACE,6DACA,cAAC,IAAD,CAAMI,GAAI,gBAAkBd,EAAMe,MAAMC,OAAO1B,GAAIuB,UAAU,kBAA7D,mCAKF,gCACE,sBAAKA,UAAU,aAAf,UACE,wBAAOI,QAAQ,cAAf,UAA+Bf,EAAU,OAAS,SAAlD,aACA,uBACEgB,KAAK,OACLL,UAAU,eACVvB,GAAG,OACH6B,UAAQ,EACRC,MAAOZ,EACPa,SAxDY,SAAAC,GACxBb,EAAUa,EAAMC,OAAOH,QAwDXI,KAAK,YAGT,wBAAQC,QAxDC,WACjB,IAAIhC,EAAO,CACTa,KAAME,EACNgB,KAAMxB,EAAMY,KAAKY,KACjB1B,QAASE,EAAMY,KAAKtB,GACpBoC,cAAe1B,EAAMe,MAAMC,OAAO1B,IAGhCY,GACFT,EAAKkC,UAAY3B,EAAMG,SAASC,MAAMC,cAAcuB,IACpDC,EAAsBC,aAAarC,GAChCsC,MAAK,SAAAC,GACJrB,GAAa,GACbsB,QAAQC,IAAIF,EAASvC,SAEtB0C,OAAM,SAAAC,GACLH,QAAQC,IAAIE,OAGhBP,EAAsBQ,aAAa5C,GAChCsC,MAAK,SAAAC,GACJrB,GAAa,GACbsB,QAAQC,IAAIF,EAASvC,SAEtB0C,OAAM,SAAAC,GACLH,QAAQC,IAAIE,OA+BmBvB,UAAU,kBAAvC,yBAQN,oDCmBSyB,EApGI,SAAAtC,GACjB,IAOA,EAAoCO,mBAPL,CAC7BjB,GAAI,KACJkC,KAAM,GACNe,QAAS,GACTC,QAAS,GACTC,QAAS,KAEX,mBAAOC,EAAP,KAAmBC,EAAnB,KAaAC,qBAAU,WAXY,IAAAtD,IAYNU,EAAMe,MAAMC,OAAO1B,GAXjCuC,EAAsBxC,IAAIC,GACvByC,MAAK,SAAAC,GACJW,EAAcX,EAASvC,MACvBwC,QAAQC,IAAIF,EAASvC,SAEtB0C,OAAM,SAAAC,GACLH,QAAQC,IAAIE,QAMf,CAACpC,EAAMe,MAAMC,OAAO1B,KAiBvB,OACE,8BACGoD,EACC,gCACE,6BAAKA,EAAWlB,OAChB,8BACE,+CAA2BkB,EAAWF,QAAQ,uBAC9C,+CAA2BE,EAAWH,QAAQM,SAFhD,IAE2DH,EAAWH,QAAQO,OAF9E,KAEwFJ,EAAWH,QAAQQ,WAE3G,cAAC,IAAD,CAAMjC,GAAI,gBAAkBd,EAAMe,MAAMC,OAAO1B,GAAK,UAAWuB,UAAU,kBAAzE,wBAGA,2CACA,qBAAKA,UAAU,MAAf,SACG6B,EAAWD,QAAQO,OAAS,EAC5BN,EAAWD,QAAQQ,KAAI,SAACzC,EAAQ0C,GAC9B,OACE,qBAAKrC,UAAU,gBAAf,SACE,qBAAKA,UAAU,OAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAGA,UAAU,YAAb,UACGL,EAAOF,KAAK,uBACb,4CAAwBE,EAAOgB,KAAK,uBACpC,4CAAwBhB,EAAO2C,QAEhCnD,EAAMY,MAAQZ,EAAMY,KAAKtB,KAAOkB,EAAOV,SACrC,sBAAKe,UAAU,MAAf,UACE,mBAAGY,QAAS,kBA1CjB,SAAC2B,EAAUF,GAC9BrB,EAAsBwB,aAAaD,EAAUpD,EAAMY,KAAKtB,IACrDyC,MAAK,SAAAC,GACJW,GAAc,SAACW,GAEb,OADAA,EAAUb,QAAQc,OAAOL,EAAO,GAChC,eACKI,SAIRnB,OAAM,SAAAC,GACLH,QAAQC,IAAIE,MA+B0BiB,CAAa7C,EAAOoB,IAAKsB,IAAQrC,UAAU,qCAA7D,oBACA,cAAC,IAAD,CAAMC,GAAI,CACR0C,SAAU,gBAAkBxD,EAAMe,MAAMC,OAAO1B,GAAK,UACpDc,MAAO,CACLC,cAAeG,IAEhBK,UAAU,qCALb,2BAXyBqC,MAyBzC,qBAAKrC,UAAU,WAAf,SACE,uDAQN,gCACE,uBACA,8DCgFK4C,EA7KS,SAAAzD,GACtB,MAAsCO,mBAAS,IAA/C,mBAAOmD,EAAP,KAAoBC,EAApB,KACA,EAAqCpD,mBAAS,IAA9C,mBAAOqD,EAAP,KAAmBC,EAAnB,KACA,EAAmCtD,mBAAS,IAA5C,mBAAOuD,EAAP,KAAkBC,EAAlB,KACA,EAA2CxD,mBAAS,IAApD,mBAAOyD,EAAP,KAAsBC,EAAtB,KACA,EAAgC1D,mBAAS,CAAC,iBAA1C,mBAAO2D,EAAP,KAAiBC,EAAjB,KAEAvB,qBAAU,WACRwB,IACAC,MACC,IAEH,IAgBMD,EAAsB,WAC1BvC,EAAsByC,SACnBvC,MAAK,SAAAC,GACJC,QAAQC,IAAIF,EAASvC,MACrBkE,EAAe3B,EAASvC,KAAKiE,gBAG9BvB,OAAM,SAAAC,GACLH,QAAQC,IAAIE,OAIZiC,EAAmB,WACvBxC,EAAsB0C,cACnBxC,MAAK,SAAAC,GACJC,QAAQC,IAAIF,EAASvC,MACrB0E,EAAY,CAAC,gBAAgBK,OAAOxC,EAASvC,UAG9C0C,OAAM,SAAAC,GACLH,QAAQC,IAAIE,OAQZqC,EAAO,SAAClF,EAAOC,GACnBqC,EAAsB4C,KAAKlF,EAAOC,GAC/BuC,MAAK,SAAAC,GACJC,QAAQC,IAAIF,EAASvC,MACrBkE,EAAe3B,EAASvC,KAAKiE,gBAE9BvB,OAAM,SAAAC,GACLH,QAAQC,IAAIE,OAoBlB,OACE,gCACE,sBAAKvB,UAAU,WAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,uBACEK,KAAK,OACLL,UAAU,eACV6D,YAAY,iBACZtD,MAAOwC,EACPvC,SAhFiB,SAAAe,GACzB,IAAMwB,EAAaxB,EAAEb,OAAOH,MAC5ByC,EAAcD,MAgFR,qBAAK/C,UAAU,qBAAf,SACE,wBACEA,UAAU,4BACVK,KAAK,SACLO,QA/BO,WACjBgD,EAAKb,EAAY,SA2BT,yBASJ,sBAAK/C,UAAU,uBAAf,UACE,uBACEK,KAAK,OACLL,UAAU,eACV6D,YAAY,gBACZtD,MAAO0C,EACPzC,SA7FgB,SAAAe,GACxB,IAAM0B,EAAY1B,EAAEb,OAAOH,MAC3B2C,EAAaD,MA6FP,qBAAKjD,UAAU,qBAAf,SACE,wBACEA,UAAU,4BACVK,KAAK,SACLO,QA7CM,WAChBgD,EAAKX,EAAW,YAyCR,yBASJ,sBAAKjD,UAAU,uBAAf,UAEE,wBAAQQ,SAtGc,SAAAe,GAC5B,IAAM4B,EAAgB5B,EAAEb,OAAOH,MAC/B6C,EAAiBD,IAoGX,SACIE,EAASjB,KAAI,SAAAT,GACZ,OACE,yBAAQpB,MAAOoB,EAAf,cAA0BA,EAAQmC,OAAO,EAAG,IAA5C,YAIP,qBAAK9D,UAAU,qBAAf,SACE,wBACEA,UAAU,4BACVK,KAAK,SACLO,QA5DU,WACC,gBAAjBuC,EAvBJI,IA0BEK,EAAKT,EAAe,YAqDd,4BAWN,qBAAKnD,UAAU,MAAf,SACG6C,EAAYT,KAAI,SAACP,GAChB,IAAMH,EAAO,UAAMG,EAAWH,QAAQM,SAAzB,YAAqCH,EAAWH,QAAQO,OAAxD,aAAmEJ,EAAWH,QAAQQ,SACnG,OACE,qBAAKlC,UAAU,gBAAf,SACE,qBAAKA,UAAU,OAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,aAAd,SAA4B6B,EAAWlB,OACvC,oBAAGX,UAAU,YAAb,UACE,+CAA2B6B,EAAWF,QAAQ,uBAC9C,+CAA2BD,KAE7B,sBAAK1B,UAAU,MAAf,UACA,cAAC,IAAD,CAAMC,GAAI,gBAAgB4B,EAAWd,IAAKf,UAAU,qCAApD,0BAGA,mBAAGU,OAAO,SAASqD,KAAM,qCAAuCrC,EAAS1B,UAAU,qCAAnF,yC,QCzGHgE,EAxDD,SAAA7E,GAEZ,IAKA,EAAwBO,mBALC,CACvBiB,KAAM,GACNlC,GAAI,KAGN,mBAAOsB,EAAP,KAAakE,EAAb,KAEMC,EAAoB,SAAAzD,GACxB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMJ,EAAd,EAAcA,MACd0D,EAAQ,2BAAKlE,GAAN,kBAAaY,EAAOJ,MAQ7B,OACE,qBAAKP,UAAU,cAAf,SACE,gCACE,sBAAKA,UAAU,aAAf,UACE,uBAAOI,QAAQ,OAAf,sBACA,uBACEC,KAAK,OACLL,UAAU,eACVvB,GAAG,OACH6B,UAAQ,EACRC,MAAOR,EAAKY,KACZH,SAAU0D,EACVvD,KAAK,YAIT,sBAAKX,UAAU,aAAf,UACE,uBAAOI,QAAQ,KAAf,gBACA,uBACEC,KAAK,OACLL,UAAU,eACVvB,GAAG,KACH6B,UAAQ,EACRC,MAAOR,EAAKtB,GACZ+B,SAAU0D,EACVvD,KAAK,UAIT,wBAAQC,QAlCA,WACZzB,EAAMgF,MAAMpE,GACZZ,EAAMiF,QAAQC,KAAK,MAgCSrE,UAAU,kBAAlC,yBC4BOsE,MArEf,WACE,MAAwB5E,mBAAS,MAAjC,mBAAOK,EAAP,KAAakE,EAAb,KAMME,EAAK,uCAAG,wCAAAI,EAAA,sDAAOxE,EAAP,+BAAc,KAC1BkE,EAAQlE,GADI,2CAAH,qDAILyE,EAAM,uCAAG,sBAAAD,EAAA,sDACbN,EAAQ,MADK,2CAAH,qDAIZ,OACE,gCACE,sBAAKjE,UAAU,2CAAf,UACE,mBAAG+D,KAAK,eAAe/D,UAAU,eAAjC,gCAGA,sBAAKA,UAAU,qBAAf,UACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAMC,GAAI,eAAgBD,UAAU,WAApC,2BAIF,oBAAIA,UAAU,WAAd,SACID,EACA,oBAAGa,QAAS4D,EAAQxE,UAAU,WAAWyE,MAAO,CAACC,OAAO,WAAxD,oBACU3E,EAAKY,QAGjB,cAAC,IAAD,CAAMV,GAAI,SAAUD,UAAU,WAA9B,2BASN,qBAAKA,UAAU,iBAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO2E,OAAK,EAACC,KAAM,CAAC,IAAK,gBAAiBC,UAAWjC,IACrD,cAAC,IAAD,CACEgC,KAAK,0BACLE,OAAQ,SAAC3F,GAAD,OACN,cAAC,EAAD,2BAAeA,GAAf,IAAsBY,KAAMA,QAGhC,cAAC,IAAD,CACE6E,KAAK,mBACLE,OAAQ,SAAC3F,GAAD,OACN,cAAC,EAAD,2BAAgBA,GAAhB,IAAuBY,KAAMA,QAGjC,cAAC,IAAD,CACE6E,KAAK,SACLE,OAAQ,SAAC3F,GAAD,OACN,cAAC,EAAD,2BAAWA,GAAX,IAAkBgF,MAAOA,iBChEvCY,IAASD,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFE,SAASC,eAAe,W","file":"static/js/main.03c11214.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nexport default axios.create({\r\n  // baseURL: \"http://localhost:5000/api/v1/restaurants\",\r\n  baseURL: \"https://webhooks.mongodb-realm.com/api/client/v2.0/app/restaurant-reviews-xbiex/service/restaurants/incoming_webhook/\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\"\r\n  }\r\n})","import http from \"../http-common\";\r\n\r\nclass RestaurantDataService {\r\n  getAll(page = 0) {\r\n    return http.get(`restaurants?page=${page}`);\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/restaurant?id=${id}`);\r\n  }\r\n\r\n  find(query, by = \"name\", page = 0) {\r\n    return http.get(`restaurants?${by}=${query}&page=${page}`);\r\n  } \r\n\r\n  createReview(data) {\r\n    return http.post(\"/review-new\", data);\r\n  }\r\n\r\n  updateReview(data) {\r\n    return http.put(\"/review-edit\", data);\r\n  }\r\n\r\n  deleteReview(id, userId) {\r\n    return http.delete(`/review-delete?id=${id}`, {data:{user_id: userId}});\r\n  }\r\n\r\n  getCuisines(id) {\r\n    return http.get(`/cuisines`);\r\n  }\r\n\r\n}\r\n\r\nexport default new RestaurantDataService();","import React, { useState } from \"react\";\r\nimport RestaurantDataService from \"../services/restaurant\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst AddReview = props => {\r\n  let initialReviewState = \"\"\r\n\r\n  let editing = false;\r\n\r\n  if (props.location.state && props.location.state.currentReview) {\r\n    editing = true;\r\n    initialReviewState = props.location.state.currentReview.text\r\n  }\r\n\r\n  const [review, setReview] = useState(initialReviewState);\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  const handleInputChange = event => {\r\n    setReview(event.target.value);\r\n  };\r\n\r\n  const saveReview = () => {\r\n    var data = {\r\n      text: review,\r\n      name: props.user.name,\r\n      user_id: props.user.id,\r\n      restaurant_id: props.match.params.id\r\n    };\r\n\r\n    if (editing) {\r\n      data.review_id = props.location.state.currentReview._id\r\n      RestaurantDataService.updateReview(data)\r\n        .then(response => {\r\n          setSubmitted(true);\r\n          console.log(response.data);\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n    } else {\r\n      RestaurantDataService.createReview(data)\r\n        .then(response => {\r\n          setSubmitted(true);\r\n          console.log(response.data);\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n    }\r\n\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {props.user ? (\r\n      <div className=\"submit-form\">\r\n        {submitted ? (\r\n          <div>\r\n            <h4>You submitted successfully!</h4>\r\n            <Link to={\"/restaurants/\" + props.match.params.id} className=\"btn btn-success\">\r\n              Back to Restaurant\r\n            </Link>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"description\">{ editing ? \"Edit\" : \"Create\" } Review</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"text\"\r\n                required\r\n                value={review}\r\n                onChange={handleInputChange}\r\n                name=\"text\"\r\n              />\r\n            </div>\r\n            <button onClick={saveReview} className=\"btn btn-success\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      ) : (\r\n      <div>\r\n        Please log in.\r\n      </div>\r\n      )}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddReview\r\n","import React, { useState, useEffect } from \"react\";\r\nimport RestaurantDataService from \"../services/restaurant\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Restaurant = props => {\r\n  const initialRestaurantState = {\r\n    id: null,\r\n    name: \"\",\r\n    address: {},\r\n    cuisine: \"\",\r\n    reviews: []\r\n  };\r\n  const [restaurant, setRestaurant] = useState(initialRestaurantState);\r\n\r\n  const getRestaurant = id => {\r\n    RestaurantDataService.get(id)\r\n      .then(response => {\r\n        setRestaurant(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getRestaurant(props.match.params.id);\r\n  }, [props.match.params.id]);\r\n\r\n  const deleteReview = (reviewId, index) => {\r\n    RestaurantDataService.deleteReview(reviewId, props.user.id)\r\n      .then(response => {\r\n        setRestaurant((prevState) => {\r\n          prevState.reviews.splice(index, 1)\r\n          return({\r\n            ...prevState\r\n          })\r\n        })\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {restaurant ? (\r\n        <div>\r\n          <h5>{restaurant.name}</h5>\r\n          <p>\r\n            <strong>Cuisine: </strong>{restaurant.cuisine}<br/>\r\n            <strong>Address: </strong>{restaurant.address.building} {restaurant.address.street}, {restaurant.address.zipcode}\r\n          </p>\r\n          <Link to={\"/restaurants/\" + props.match.params.id + \"/review\"} className=\"btn btn-primary\">\r\n            Add Review\r\n          </Link>\r\n          <h4> Reviews </h4>\r\n          <div className=\"row\">\r\n            {restaurant.reviews.length > 0 ? (\r\n             restaurant.reviews.map((review, index) => {\r\n               return (\r\n                 <div className=\"col-lg-4 pb-1\" key={index}>\r\n                   <div className=\"card\">\r\n                     <div className=\"card-body\">\r\n                       <p className=\"card-text\">\r\n                         {review.text}<br/>\r\n                         <strong>User: </strong>{review.name}<br/>\r\n                         <strong>Date: </strong>{review.date}\r\n                       </p>\r\n                       {props.user && props.user.id === review.user_id &&\r\n                          <div className=\"row\">\r\n                            <a onClick={() => deleteReview(review._id, index)} className=\"btn btn-primary col-lg-5 mx-1 mb-1\">Delete</a>\r\n                            <Link to={{\r\n                              pathname: \"/restaurants/\" + props.match.params.id + \"/review\",\r\n                              state: {\r\n                                currentReview: review\r\n                              }\r\n                            }} className=\"btn btn-primary col-lg-5 mx-1 mb-1\">Edit</Link>\r\n                          </div>                   \r\n                       }\r\n                     </div>\r\n                   </div>\r\n                 </div>\r\n               );\r\n             })\r\n            ) : (\r\n            <div className=\"col-sm-4\">\r\n              <p>No reviews yet.</p>\r\n            </div>\r\n            )}\r\n\r\n          </div>\r\n\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <br />\r\n          <p>No restaurant selected.</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Restaurant;","import { useState, useEffect } from 'react'\r\nimport RestaurantDataService from '../services/restaurant'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst RestaurantsList = props => {\r\n  const [restaurants, setRestaurants] = useState([])\r\n  const [searchName, setSearchName ] = useState(\"\")\r\n  const [searchZip, setSearchZip ] = useState(\"\")\r\n  const [searchCuisine, setSearchCuisine ] = useState(\"\")\r\n  const [cuisines, setCuisines] = useState([\"All Cuisines\"])\r\n\r\n  useEffect(() => {\r\n    retrieveRestaurants();\r\n    retrieveCuisines();\r\n  }, []);\r\n\r\n  const onChangeSearchName = e => {\r\n    const searchName = e.target.value;\r\n    setSearchName(searchName);\r\n  };\r\n\r\n  const onChangeSearchZip = e => {\r\n    const searchZip = e.target.value;\r\n    setSearchZip(searchZip);\r\n  };\r\n\r\n  const onChangeSearchCuisine = e => {\r\n    const searchCuisine = e.target.value;\r\n    setSearchCuisine(searchCuisine);\r\n    \r\n  };\r\n\r\n  const retrieveRestaurants = () => {\r\n    RestaurantDataService.getAll()\r\n      .then(response => {\r\n        console.log(response.data);\r\n        setRestaurants(response.data.restaurants);\r\n        \r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const retrieveCuisines = () => {\r\n    RestaurantDataService.getCuisines()\r\n      .then(response => {\r\n        console.log(response.data);\r\n        setCuisines([\"All Cuisines\"].concat(response.data));\r\n        \r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const refreshList = () => {\r\n    retrieveRestaurants();\r\n  };\r\n\r\n  const find = (query, by) => {\r\n    RestaurantDataService.find(query, by)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        setRestaurants(response.data.restaurants);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const findByName = () => {\r\n    find(searchName, \"name\")\r\n  };\r\n\r\n  const findByZip = () => {\r\n    find(searchZip, \"zipcode\")\r\n  };\r\n\r\n  const findByCuisine = () => {\r\n    if (searchCuisine == \"All Cuisines\") {\r\n      refreshList();\r\n    } else {\r\n      find(searchCuisine, \"cuisine\")\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row pb-1\">\r\n        <div className=\"input-group col-lg-4\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Search by name\"\r\n            value={searchName}\r\n            onChange={onChangeSearchName}\r\n          />\r\n          <div className=\"input-group-append\">\r\n            <button\r\n              className=\"btn btn-outline-secondary\"\r\n              type=\"button\"\r\n              onClick={findByName}\r\n            >\r\n              Search\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"input-group col-lg-4\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Search by zip\"\r\n            value={searchZip}\r\n            onChange={onChangeSearchZip}\r\n          />\r\n          <div className=\"input-group-append\">\r\n            <button\r\n              className=\"btn btn-outline-secondary\"\r\n              type=\"button\"\r\n              onClick={findByZip}\r\n            >\r\n              Search\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"input-group col-lg-4\">\r\n\r\n          <select onChange={onChangeSearchCuisine}>\r\n             {cuisines.map(cuisine => {\r\n               return (\r\n                 <option value={cuisine}> {cuisine.substr(0, 20)} </option>\r\n               )\r\n             })}\r\n          </select>\r\n          <div className=\"input-group-append\">\r\n            <button\r\n              className=\"btn btn-outline-secondary\"\r\n              type=\"button\"\r\n              onClick={findByCuisine}\r\n            >\r\n              Search\r\n            </button>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        {restaurants.map((restaurant) => {\r\n          const address = `${restaurant.address.building} ${restaurant.address.street}, ${restaurant.address.zipcode}`;\r\n          return (\r\n            <div className=\"col-lg-4 pb-1\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">{restaurant.name}</h5>\r\n                  <p className=\"card-text\">\r\n                    <strong>Cuisine: </strong>{restaurant.cuisine}<br/>\r\n                    <strong>Address: </strong>{address}\r\n                  </p>\r\n                  <div className=\"row\">\r\n                  <Link to={\"/restaurants/\"+restaurant._id} className=\"btn btn-primary col-lg-5 mx-1 mb-1\">\r\n                    View Reviews\r\n                  </Link>\r\n                  <a target=\"_blank\" href={\"https://www.google.com/maps/place/\" + address} className=\"btn btn-primary col-lg-5 mx-1 mb-1\">View Map</a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RestaurantsList\r\n","import { useState } from 'react'\r\n\r\nconst Login = props => {\r\n\r\n  const initialUserState = {\r\n    name: \"\",\r\n    id: \"\",\r\n  };\r\n\r\n  const [user, setUser] = useState(initialUserState)\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target\r\n    setUser({ ...user, [name]: value })\r\n  };\r\n\r\n  const login = () => {\r\n    props.login(user)\r\n    props.history.push('/')\r\n  }\r\n\r\n  return (\r\n    <div className=\"submit-form\">\r\n      <div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"user\">Username</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"name\"\r\n            required\r\n            value={user.name}\r\n            onChange={handleInputChange}\r\n            name=\"name\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"id\">ID</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"id\"\r\n            required\r\n            value={user.id}\r\n            onChange={handleInputChange}\r\n            name=\"id\"\r\n          />\r\n        </div>\r\n\r\n        <button onClick={login} className=\"btn btn-success\">\r\n          Login\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login","import { useState } from \"react\"\nimport { Switch, Route, Link } from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport AddReview from './components/add-review'\nimport Restaurant from './components/restaurants'\nimport RestaurantsList from './components/restaurants-list'\nimport Login from './components/login'\n\nfunction App() {\n  const [user, setUser] = useState(null)\n\n  // async function login(user = null) {\n  //   setUser(user)\n  // }\n\n  const login = async (user = null) => {\n    setUser(user)\n  }\n\n  const logout = async () => {\n    setUser(null)\n  }\n\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n        <a href=\"/restaurants\" className=\"navbar-brand\">\n          Restaurant Reviews\n        </a>\n        <div className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link to={\"/restaurants\"} className=\"nav-link\">\n              Restaurants\n            </Link>\n          </li>\n          <li className=\"nav-item\" >\n            { user ? (\n              <a onClick={logout} className=\"nav-link\" style={{cursor:'pointer'}}>\n                Logout {user.name}\n              </a>\n            ) : (            \n            <Link to={\"/login\"} className=\"nav-link\">\n              Login\n            </Link>\n            )}\n\n          </li>\n        </div>\n      </nav>\n\n      <div className=\"container mt-3\">\n        <Switch>\n          <Route exact path={[\"/\", \"/restaurants\"]} component={RestaurantsList} />\n          <Route \n            path=\"/restaurants/:id/review\"\n            render={(props) => (\n              <AddReview {...props} user={user} />\n            )}\n          />\n          <Route \n            path=\"/restaurants/:id\"\n            render={(props) => (\n              <Restaurant {...props} user={user} />\n            )}\n          />\n          <Route \n            path=\"/login\"\n            render={(props) => (\n              <Login {...props} login={login} />\n            )}\n          />\n        </Switch>\n      </div>      \n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n)"],"sourceRoot":""}